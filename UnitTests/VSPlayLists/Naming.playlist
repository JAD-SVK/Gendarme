<Playlist Version="1.0"><Add Test="Test.Rules.Naming.UseSingularNameInEnumsUnlessAreFlagsTest.TestFlagsAllowedToHavePluralNames" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestVariousLevelInheritanceIncorrectName" /><Add Test="Test.Rules.Naming.AvoidRedundancyInMethodNameTest.DoesNotApply" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.CheckShouldNeverBeUsedSuffixes" /><Add Test="Test.Rules.Naming.UsePluralNameInEnumFlagsTest.TestFlagsHasSingularName" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.GenericDictionary" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.FlagsName" /><Add Test="Test.Rules.Naming.UseCorrectCasingTypeTest.DoesNotApply" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierMethodTest.ComInterop" /><Add Test="Test.Rules.Naming.DoNotUseReservedInEnumValueNamesTest.TestNonEnum" /><Add Test="Test.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodTest.TestInterfaceMethod" /><Add Test="Test.Rules.Naming.AvoidRedundancyInTypeNameTest.Success" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestInterfaceImplementerIncorrectName" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.MoreCoverage" /><Add Test="Test.Rules.Naming.DoNotPrefixEventsWithAfterOrBeforeTest.DoesNotApply" /><Add Test="Test.Rules.Naming.DoNotPrefixValuesWithEnumNameTest.TestFalsePositive" /><Add Test="Test.Rules.Naming.AvoidDeepNamespaceHierarchyTest.Max" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierMethodTest.Enum" /><Add Test="Test.Rules.Naming.DoNotPrefixValuesWithEnumNameTest.TestNonEnum" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestGoodEventHandler" /><Add Test="Test.Rules.Naming.AvoidRedundancyInMethodNameTest.Failure4" /><Add Test="Test.Rules.Naming.UseCorrectCasingAssemblyTest.Namespaces" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.ComInterop" /><Add Test="Test.Rules.Naming.DoNotUseReservedInEnumValueNamesTest.TestFalsePositive" /><Add Test="Test.Rules.Naming.UsePreferredTermsTypeTest.Bad" /><Add Test="Test.Rules.Naming.UsePreferredTermsTypeTest.Good" /><Add Test="Test.Rules.Naming.AvoidRedundancyInTypeNameTest.DoesNotApply" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.PublicClassWithUnderscoreTest" /><Add Test="Test.Rules.Naming.UseSingularNameInEnumsUnlessAreFlagsTest.TestEnumHasPluralName" /><Add Test="Test.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodTest.TestNoOverwrite" /><Add Test="Test.Rules.Naming.UsePluralNameInEnumFlagsTest.TestFlagsHasPluralName" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.PublicInterfaceWithUnderscoreTest" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestGoodPrivateEvent" /><Add Test="Test.Rules.Naming.AvoidDeepNamespaceHierarchyTest.Namespaces" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.IncorrectBaseType" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestPropertyLikeMethods" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestBadProperty" /><Add Test="Test.Rules.Naming.AvoidRedundancyInTypeNameTest.Failure1" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestIncorrectICollectionImplementer" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestDerivingClassImplementingInterfacesIncorrectName" /><Add Test="Test.Rules.Naming.DoNotPrefixEventsWithAfterOrBeforeTest.None" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestGoodProperty" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.InternalClassWithUnderscoreTest" /><Add Test="Test.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodTest.TestAbstract" /><Add Test="Test.Rules.Naming.AvoidTypeInterfaceInconsistencyTest.DoesNotApply" /><Add Test="Test.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodTest.TestVirtual" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestAnonymousMethod" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestDerivingClassImplementingInterfacesCorrectName" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestIgnoringOperator" /><Add Test="Test.Rules.Naming.UsePreferredTermsAssemblyTest.AssemblyName" /><Add Test="Test.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodTest.TestDoesNotApply" /><Add Test="Test.Rules.Naming.AvoidRedundancyInTypeNameTest.Failure2" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestOneLevelInheritanceIncorrectName" /><Add Test="Test.Rules.Naming.DoNotPrefixValuesWithEnumNameTest.TestReserved" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestMultipleInterfaceImplementerAnotherCorrectName" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestCorrectCasedMethod" /><Add Test="Test.Rules.Naming.DoNotPrefixEventsWithAfterOrBeforeTest.Bad" /><Add Test="Test.Rules.Naming.UseCorrectPrefixTypeTest.DoesNotApply" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestMultipleInterfaceImplementerCorrectName" /><Add Test="Test.Rules.Naming.UseCorrectPrefixTypeTest.Abbreviations" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.EnumName" /><Add Test="Test.Rules.Naming.AvoidDeepNamespaceHierarchyTest.Min" /><Add Test="Test.Rules.Naming.DoNotUseReservedInEnumValueNamesTest.TestReserved" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierMethodTest.MembersWithUnderscoreTest" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestIgnoringCtor" /><Add Test="Test.Rules.Naming.UseCorrectPrefixTypeTest.Interfaces" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestIncorrectMultipleInterfaceImplementer" /><Add Test="Test.Rules.Naming.UseCorrectCasingTypeTest.Types" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierAssemblyTest.AssemblyName" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestOneLevelInheritanceCorrectName" /><Add Test="Test.Rules.Naming.DoNotPrefixEventsWithAfterOrBeforeTest.Ok" /><Add Test="Test.Rules.Naming.UseCorrectPrefixTypeTest.GenericParameters" /><Add Test="Test.Rules.Naming.AvoidRedundancyInTypeNameTest.Failure4" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestBadEventHandler" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.Types" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.InternalInterfaceWithUnderscoreTest" /><Add Test="Test.Rules.Naming.UsePreferredTermsMethodTest.Bad" /><Add Test="Test.Rules.Naming.UseCorrectPrefixTypeTest.Types" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TwiceBadSuffix" /><Add Test="Test.Rules.Naming.UsePreferredTermsAssemblyTest.Namespace" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierMethodTest.AnonymousDelegate" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.DoesNotApply" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestMultipleInterfaceImplementerIncorrectName" /><Add Test="Test.Rules.Naming.AvoidRedundancyInMethodNameTest.Failure1" /><Add Test="Test.Rules.Naming.AvoidTypeInterfaceInconsistencyTest.Good" /><Add Test="Test.Rules.Naming.AvoidRedundancyInTypeNameTest.Failure3" /><Add Test="Test.Rules.Naming.DoNotPrefixValuesWithEnumNameTest.TestSameName" /><Add Test="Test.Rules.Naming.AvoidTypeInterfaceInconsistencyTest.Bad" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.Enum" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierMethodTest.DoesNotApply" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierTypeTest.DoesNotApply" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestIncorrectCasedMethodWithIncorrectCasedParameters" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestVariousLevelInheritanceCorrectName" /><Add Test="Test.Rules.Naming.AvoidRedundancyInMethodNameTest.Success" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.GenericCollection" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierMethodTest.MembersWithoutUnderscoreTest" /><Add Test="Test.Rules.Naming.UseSingularNameInEnumsUnlessAreFlagsTest.TestEnumHasSingularName" /><Add Test="Test.Rules.Naming.UsePreferredTermsMethodTest.Good" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.NeedToBeResolvedTypes" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestInterfaceImplementerCorrectName" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestIncorrectCasedMethod" /><Add Test="Test.Rules.Naming.AvoidRedundancyInMethodNameTest.Failure3" /><Add Test="Test.Rules.Naming.AvoidNonAlphanumericIdentifierAssemblyTest.Namespace" /><Add Test="Test.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodTest.GenericInterface" /><Add Test="Test.Rules.Naming.UseCorrectCasingTest.TestCorrectCasedMethodWithIncorrectCasedParameters" /><Add Test="Test.Rules.Naming.AvoidRedundancyInMethodNameTest.Failure2" /><Add Test="Test.Rules.Naming.UseCorrectSuffixTest.TestDerivingClassImplementingInterfacesAnotherIncorrectName" /></Playlist>