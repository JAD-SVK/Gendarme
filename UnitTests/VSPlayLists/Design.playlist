<Playlist Version="1.0"><Add Test="Test.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsTest.TestEverythingIsThere" /><Add Test="Test.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeTest.SealedClassWithProtectedFieldTest" /><Add Test="Test.Rules.Design.AvoidEmptyInterfaceTest.NotEmpty" /><Add Test="Test.Rules.Design.UseCorrectDisposeSignaturesTest.DoesNotApply" /><Add Test="Test.Rules.Design.EnumeratorsShouldBeStronglyTypedTest.Good" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.EmptyClassHasDefaultPublicInstanceCtor" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.TestNativeFieldArray" /><Add Test="Test.Rules.Design.EnumsShouldUseInt32Test.ReallyBad" /><Add Test="Test.Rules.Design.OperatorEqualsShouldBeOverloadedTest.TestEverythingOK" /><Add Test="Test.Rules.Design.ImplementIComparableCorrectlyTest.NotApplicable" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestFalse" /><Add Test="Test.Rules.Design.DoNotDeclareSettersOnCollectionPropertiesTest.Good" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.SkipOnCanonicalScenariosTest" /><Add Test="Test.Rules.Design.PreferUriOverStringTest.GeneratedCode" /><Add Test="Test.Rules.Design.AvoidRefAndOutParametersTest.Interfaces" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestInequality" /><Add Test="Test.Rules.Design.UseFlagsAttributeTest.DoesNotApply" /><Add Test="Test.Rules.Design.AvoidMultidimensionalIndexerTest.DoesNotApply" /><Add Test="Test.Rules.Design.MarkAssemblyWithComVisibleTest.Bad" /><Add Test="Test.Rules.Design.AvoidMultidimensionalIndexerTest.NonVisible" /><Add Test="Test.Rules.Design.DoNotDeclareVirtualMethodsInSealedTypeTest.Unsealed" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.TestHasFinalizer" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.GetHashCodeButNotEqualsTest" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithTwoFieldsTest" /><Add Test="Test.Rules.Design.MarkAssemblyWithComVisibleTest.Good" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.TestStaticCase" /><Add Test="Test.Rules.Design.ConsiderConvertingMethodToPropertyTest.TestGetConstructor" /><Add Test="Test.Rules.Design.OperatorEqualsShouldBeOverloadedTest.TestStructNoEquality" /><Add Test="Test.Rules.Design.MarkAssemblyWithAssemblyVersionTest.FxCop_ManuallySuppressed" /><Add Test="Test.Rules.Design.AvoidRefAndOutParametersTest.Reference" /><Add Test="Test.Rules.Design.AvoidVisibleNestedTypesTest.Internal" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestTrue" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestLess" /><Add Test="Test.Rules.Design.AvoidPropertiesWithoutGetAccessorTest.WithNoProperties" /><Add Test="Test.Rules.Design.DoNotDeclareVirtualMethodsInSealedTypeTest.Override" /><Add Test="Test.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsTest.TestNoOperator" /><Add Test="Test.Rules.Design.FinalizersShouldBeProtectedTest.TestNoFinalizerClass" /><Add Test="Test.Rules.Design.DoNotDeclareSettersOnCollectionPropertiesTest.SpecialCases" /><Add Test="Test.Rules.Design.ConsiderConvertingMethodToPropertyTest.DoesNotApply" /><Add Test="Test.Rules.Design.MainShouldNotBePublicTest.DoesNotApply" /><Add Test="Test.Rules.Design.PreferIntegerOrStringForIndexersTest.DoesNotApply" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.GetHashCodeWithOneArgTest" /><Add Test="Test.Rules.Design.ConsiderAddingInterfaceTest.Failure" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestTwoAccessorsMissingAttribute" /><Add Test="Test.Rules.Design.AvoidRefAndOutParametersTest.DoesNotApply" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.TestArraySpecialCase" /><Add Test="Test.Rules.Design.AbstractTypesShouldNotHavePublicConstructorsTest.WithPublicConstructors" /><Add Test="Test.Rules.Design.PreferXmlAbstractionsTest.Success" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestNoAccessorsMissingAttribute" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.TestNoFinalizer" /><Add Test="Test.Rules.Design.PreferEventsOverMethodsTest.DoesNotApply" /><Add Test="Test.Rules.Design.ListsAreStronglyTypedTest.Bad" /><Add Test="Test.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsTest.TestMissingUnary" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestModulus" /><Add Test="Test.Rules.Design.DoNotDeclareSettersOnCollectionPropertiesTest.Bad" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.DoesNotApply" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.SuccessOnClassWithOnlyMethodsTest" /><Add Test="Test.Rules.Design.TypesShouldBeInsideNamespacesTest.NestedOutsideNamespace" /><Add Test="Test.Rules.Design.ListsAreStronglyTypedTest.Good" /><Add Test="Test.Rules.Design.ConsiderConvertingMethodToPropertyTest.TestShouldBeIgnoredMultipleValuesInSet" /><Add Test="Test.Rules.Design.FinalizersShouldBeProtectedTest.TestNonProtectedFinalizerDefinedClass" /><Add Test="Test.Rules.Design.AvoidEmptyInterfaceTest.NotAnInterface" /><Add Test="Test.Rules.Design.DoNotDeclareVirtualMethodsInSealedTypeTest.Generic" /><Add Test="Test.Rules.Design.ConsiderConvertingFieldToNullableTest.ClassesWithPotentialNullable" /><Add Test="Test.Rules.Design.MarkAssemblyWithAssemblyVersionTest.Good" /><Add Test="Test.Rules.Design.AvoidRefAndOutParametersTest.Out" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.DoesNotApply" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.TestShouldBeCaught" /><Add Test="Test.Rules.Design.ImplementIComparableCorrectlyTest.GenericStruct" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestMultiConstructorOneAccessorMissingAttribute" /><Add Test="Test.Rules.Design.AvoidSmallNamespaceTest.FakeEntryPoint" /><Add Test="Test.Rules.Design.EnumsShouldDefineAZeroValueTest.EnumWithZeroValue" /><Add Test="Test.Rules.Design.ProvideTryParseAlternativeTest.DoesNotApply" /><Add Test="Test.Rules.Design.MissingAttributeUsageOnCustomAttributeTest.TestUsageDefinedInheritsNoUsageDefinedAttribute" /><Add Test="Test.Rules.Design.MarkAssemblyWithComVisibleTest.FxCop_GloballySuppressed" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestEverythingOK" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithDelegateReturningNonVoidTest" /><Add Test="Test.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeTest.SealedClassWithoutProtectedMethodsTest" /><Add Test="Test.Rules.Design.AvoidVisibleNestedTypesTest.Public" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.TestNoNativeFields" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.DoesNotApply" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.TestShouldBeIgnored" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestOneAccessorMissingAttribute" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.ImplementsGetHashCodeUsesObjectEqualsTest" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.ImplementsEqualsUsesObjectGetHashCodeTest" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.BothOfThemTest" /><Add Test="Test.Rules.Design.AvoidPropertiesWithoutGetAccessorTest.WithOnlySet" /><Add Test="Test.Rules.Design.PreferUriOverStringTest.Bad" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestJustClass" /><Add Test="Test.Rules.Design.ConsiderConvertingMethodToPropertyTest.TestShouldBeIgnored" /><Add Test="Test.Rules.Design.ImplementICloneableCorrectlyTest.DeepInheritance" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestEquality" /><Add Test="Test.Rules.Design.PreferIntegerOrStringForIndexersTest.Visible" /><Add Test="Test.Rules.Design.ConsiderConvertingMethodToPropertyTest.GetOnly" /><Add Test="Test.Rules.Design.EnumsShouldUseInt32Test.Ok" /><Add Test="Test.Rules.Design.ConsiderConvertingFieldToNullableTest.ClassesWithoutPotentialNullable" /><Add Test="Test.Rules.Design.AvoidSmallNamespaceTest.MultipleNamespacesNotEnoughTypes" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestMultiConstructorTwoAccessorsMissingAttribute" /><Add Test="Test.Rules.Design.EnumsShouldUseInt32Test.NotAnEnum" /><Add Test="Test.Rules.Design.AvoidEmptyInterfaceTest.Empty" /><Add Test="Test.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsTest.TestMissingBinary" /><Add Test="Test.Rules.Design.FlagsShouldNotDefineAZeroValueTest.NotAFlag" /><Add Test="Test.Rules.Design.AvoidSmallNamespaceTest.GlobalNamespace" /><Add Test="Test.Rules.Design.MainShouldNotBePublicTest.Failure" /><Add Test="Test.Rules.Design.ImplementICloneableCorrectlyTest.WrongSignatures" /><Add Test="Test.Rules.Design.OperatorEqualsShouldBeOverloadedTest.TestNoOperator" /><Add Test="Test.Rules.Design.PreferXmlAbstractionsTest.DoesNotApply" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.Struct" /><Add Test="Test.Rules.Design.ProvideTryParseAlternativeTest.WrongSignature" /><Add Test="Test.Rules.Design.ConsiderAddingInterfaceTest.DoesNotApply" /><Add Test="Test.Rules.Design.OverrideEqualsMethodTest.DoesNotApply" /><Add Test="Test.Rules.Design.EnumsShouldDefineAZeroValueTest.FlagWithoutZeroValue" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.SuccessOnClassWithGenericEventHandlerTest" /><Add Test="Test.Rules.Design.AvoidSmallNamespaceTest.SpecializationNamespaces" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithDelegateWithOneParameterTest" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.SuccessOnStaticClassTest" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.ImplementsEqualsReuseBaseGetHashCodeTest" /><Add Test="Test.Rules.Design.DoNotDeclareVirtualMethodsInSealedTypeTest.DoesNotApply" /><Add Test="Test.Rules.Design.ConsiderConvertingFieldToNullableTest.NotApplicableBefore2_0" /><Add Test="Test.Rules.Design.AvoidSmallNamespaceTest.SingleNamespace" /><Add Test="Test.Rules.Design.TypesShouldBeInsideNamespacesTest.NestedInsideNamespace" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.NoOperator" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestMissing2" /><Add Test="Test.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsTest.TestMissingCompare" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailureOnClassWithBadDelegateUsingGenericsTest" /><Add Test="Test.Rules.Design.MarkAssemblyWithCLSCompliantTest.Bad" /><Add Test="Test.Rules.Design.OverrideEqualsMethodTest.TestNoEquals" /><Add Test="Test.Rules.Design.PreferUriOverStringTest.Good" /><Add Test="Test.Rules.Design.AvoidPropertiesWithoutGetAccessorTest.WithOnlyGet" /><Add Test="Test.Rules.Design.OperatorEqualsShouldBeOverloadedTest.TestNoEquals" /><Add Test="Test.Rules.Design.MissingAttributeUsageOnCustomAttributeTest.TestNoUsageDefinedAttribute" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.TestReadOnlySpecialCase" /><Add Test="Test.Rules.Design.EnumsShouldDefineAZeroValueTest.DoesNotApply" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestMissing1" /><Add Test="Test.Rules.Design.FlagsShouldNotDefineAZeroValueTest.FlagsWithoutZeroValue" /><Add Test="Test.Rules.Design.FinalizersShouldBeProtectedTest.TestProtectedFinalizerClass" /><Add Test="Test.Rules.Design.MarkAssemblyWithCLSCompliantTest.Good" /><Add Test="Test.Rules.Design.MarkAssemblyWithAssemblyVersionTest.Bad" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.SkipOnNonClassesTest" /><Add Test="Test.Rules.Design.ListsAreStronglyTypedTest.DoesNotApply" /><Add Test="Test.Rules.Design.PreferEventsOverMethodsTest.Bad" /><Add Test="Test.Rules.Design.OperatorEqualsShouldBeOverloadedTest.TestStructNoOperator" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithDelegateWithEventArgsTest" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestNearlyEmptyttribute" /><Add Test="Test.Rules.Design.ConsiderConvertingMethodToPropertyTest.SetOnly" /><Add Test="Test.Rules.Design.MissingAttributeUsageOnCustomAttributeTest.TestUsageDefinedAttribute" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.SuccessOnClassWithGoodDelegateTest" /><Add Test="Test.Rules.Design.FlagsShouldNotDefineAZeroValueTest.FlagsWithZeroValue" /><Add Test="Test.Rules.Design.MarkAssemblyWithCLSCompliantTest.DoesNotApply" /><Add Test="Test.Rules.Design.PreferIntegerOrStringForIndexersTest.NonVisible" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.EqualsButNotGetHashCodeTest" /><Add Test="Test.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeTest.Override" /><Add Test="Test.Rules.Design.ConsiderConvertingFieldToNullableTest.TypesWhichDoNotApply" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.SkipOnInheritanceTest" /><Add Test="Test.Rules.Design.StronglyTypeICollectionMembersTest.Bad" /><Add Test="Test.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeTest.SealedClassWithoutProtectedFieldsTest" /><Add Test="Test.Rules.Design.AvoidMultidimensionalIndexerTest.Visible" /><Add Test="Test.Rules.Design.OverrideEqualsMethodTest.TestNoOperator" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.TestNotDisposableBecauseStatic" /><Add Test="Test.Rules.Design.EnumeratorsShouldBeStronglyTypedTest.Bad" /><Add Test="Test.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeTest.DoesNotApply" /><Add Test="Test.Rules.Design.MissingAttributeUsageOnCustomAttributeTest.TestNotAttribute" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithDelegateWithoutSenderTest" /><Add Test="Test.Rules.Design.EnumeratorsShouldBeStronglyTypedTest.DoesNotApply" /><Add Test="Test.Rules.Design.TypesShouldBeInsideNamespacesTest.InsideNamespace" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.EqualsWithTwoArgsTest" /><Add Test="Test.Rules.Design.PreferEventsOverMethodsTest.Good" /><Add Test="Test.Rules.Design.StronglyTypeICollectionMembersTest.Good" /><Add Test="Test.Rules.Design.OverrideEqualsMethodTest.TestEverythingOK" /><Add Test="Test.Rules.Design.AbstractTypesShouldNotHavePublicConstructorsTest.WithNoConstructors" /><Add Test="Test.Rules.Design.UseFlagsAttributeTest.Cases" /><Add Test="Test.Rules.Design.AvoidSmallNamespaceTest.Zero" /><Add Test="Test.Rules.Design.AvoidVisibleNestedTypesTest.Protected" /><Add Test="Test.Rules.Design.ConsiderConvertingFieldToNullableTest.ClassesWithProperNullable" /><Add Test="Test.Rules.Design.PreferUriOverStringTest.DoesNotApply" /><Add Test="Test.Rules.Design.MarkAssemblyWithComVisibleTest.DoesNotApply" /><Add Test="Test.Rules.Design.MissingAttributeUsageOnCustomAttributeTest.TestNoUsageDefinedInheritsUsageDefinedAttribute" /><Add Test="Test.Rules.Design.AbstractTypesShouldNotHavePublicConstructorsTest.WithProtectedConstructors" /><Add Test="Test.Rules.Design.ImplementIComparableCorrectlyTest.BothClass" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.TestNested" /><Add Test="Test.Rules.Design.MarkAssemblyWithCLSCompliantTest.FxCop_GloballySuppressed" /><Add Test="Test.Rules.Design.OperatorEqualsShouldBeOverloadedTest.TestOnlyOneOperator" /><Add Test="Test.Rules.Design.ConsiderAddingInterfaceTest.GenericConstraints" /><Add Test="Test.Rules.Design.OperatorEqualsShouldBeOverloadedTest.DoesNotApply" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithDelegateWithoutETest" /><Add Test="Test.Rules.Design.ImplementIComparableCorrectlyTest.NonGenericStruct" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestMultiConstructorNoAccessorsMissingAttribute" /><Add Test="Test.Rules.Design.ProvideTryParseAlternativeTest.Interfaces" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.NonDefaultConstructor" /><Add Test="Test.Rules.Design.ConsiderConvertingMethodToPropertyTest.TestShouldBeCaught" /><Add Test="Test.Rules.Design.ImplementIComparableCorrectlyTest.NonGenericObject" /><Add Test="Test.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsTest.DoesNotApply" /><Add Test="Test.Rules.Design.EnsureSymmetryForOverloadedOperatorsTest.TestGreater" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.SuccessOnClassWithOnlyFieldsTest" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestInheritedPropertiesAttribute" /><Add Test="Test.Rules.Design.MarkAssemblyWithAssemblyVersionTest.FxCop_GloballySuppressed" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.DoesNotApplyGeneratedCode" /><Add Test="Test.Rules.Design.UseCorrectDisposeSignaturesTest.Cases" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.SuccessOnClassWithDelegateTest" /><Add Test="Test.Rules.Design.StronglyTypeICollectionMembersTest.DoesNotApply" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.DoesNotApply" /><Add Test="Test.Rules.Design.ProvideTryParseAlternativeTest.Structures" /><Add Test="Test.Rules.Design.AttributeArgumentsShouldHaveAccessorsTest.TestEmptyAttribute" /><Add Test="Test.Rules.Design.DoNotDeclareVirtualMethodsInSealedTypeTest.SealedClassWithVirtualMethodTest" /><Add Test="Test.Rules.Design.ImplementICloneableCorrectlyTest.CorrectSignatures" /><Add Test="Test.Rules.Design.EnumsShouldDefineAZeroValueTest.FlagWithZeroValue" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithDelegateWithObjectTest" /><Add Test="Test.Rules.Design.ImplementEqualsAndGetHashCodeInPairTest.NoneOfThemTest" /><Add Test="Test.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeTest.SealedClassWithProtectedMethodTest" /><Add Test="Test.Rules.Design.MainShouldNotBePublicTest.Success" /><Add Test="Test.Rules.Design.PreferUriOverStringTest.Attribute" /><Add Test="Test.Rules.Design.AvoidPropertiesWithoutGetAccessorTest.WithBothGetAndSet" /><Add Test="Test.Rules.Design.ConsiderAddingInterfaceTest.Success" /><Add Test="Test.Rules.Design.AvoidVisibleNestedTypesTest.Private" /><Add Test="Test.Rules.Design.ProvideTryParseAlternativeTest.Classes" /><Add Test="Test.Rules.Design.ConsiderAddingInterfaceTest.BaseInterface" /><Add Test="Test.Rules.Design.PreferXmlAbstractionsTest.Failure" /><Add Test="Test.Rules.Design.DisposableTypesShouldHaveFinalizerTest.TestNotDisposable" /><Add Test="Test.Rules.Design.AbstractTypesShouldNotHavePublicConstructorsTest.DoesNotApply" /><Add Test="Test.Rules.Design.EnumsShouldUseInt32Test.Bad" /><Add Test="Test.Rules.Design.InternalNamespacesShouldNotExposeTypesTest.Namespaces" /><Add Test="Test.Rules.Design.TypesShouldBeInsideNamespacesTest.OutsideNamespace" /><Add Test="Test.Rules.Design.AvoidVisibleNestedTypesTest.DoesNotApply" /><Add Test="Test.Rules.Design.AvoidSmallNamespaceTest.Minimum" /><Add Test="Test.Rules.Design.ConsiderUsingStaticTypeTest.FailOnCouldBeStaticClassTest" /><Add Test="Test.Rules.Design.DeclareEventHandlesCorrectlyTest.FailOnClassWithDelegateWithBadTypesTest" /><Add Test="Test.Rules.Design.EnumsShouldDefineAZeroValueTest.EnumWithoutZeroValue" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.Events" /><Add Test="Test.Rules.Design.DoNotDeclareSettersOnCollectionPropertiesTest.DoesNotApply" /><Add Test="Test.Rules.Design.AvoidVisibleFieldsTest.TestConstSpecialCase" /><Add Test="Test.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeTest.Unsealed" /></Playlist>